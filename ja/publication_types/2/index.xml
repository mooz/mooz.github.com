<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2 | Masafumi Oyamada</title>
    <link>https://mooz.github.io/ja/publication_types/2/</link>
      <atom:link href="https://mooz.github.io/ja/publication_types/2/index.xml" rel="self" type="application/rss+xml" />
    <description>2</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ja</language><lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://mooz.github.io/images/icon_hud76b0b5cb03cbdbd01ad5fbc1aeef883_89416_512x512_fill_linear_center_2.png</url>
      <title>2</title>
      <link>https://mooz.github.io/ja/publication_types/2/</link>
    </image>
    
    <item>
      <title>Continuous Top-k Spatial-Keyword Search on Dynamic Objects</title>
      <link>https://mooz.github.io/ja/publication/journals-vldb-yuyang-xcytoh-20/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://mooz.github.io/ja/publication/journals-vldb-yuyang-xcytoh-20/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Compressed Vector Set: A Fast and Space-Efficient Data Mining Framework</title>
      <link>https://mooz.github.io/ja/publication/jip2018-compressed-machine-learning/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://mooz.github.io/ja/publication/jip2018-compressed-machine-learning/</guid>
      <description>&lt;p&gt;In this paper, we present CVS (Compressed Vector Set), a fast and
space-efficient data mining framework that efficiently handles both sparse and
dense datasets. CVS holds a set of vectors in a compressed format and conducts
primitive vector operations, such as lp-norm and dot product, without
decompression. By combining these primitive operations, CVS accelerates
prominent data mining or machine learning algorithms including k-nearest
neighbor algorithm, stochastic gradient descent algorithm on logistic
regression, and kernel methods. In contrast to the commonly used sparse
matrix/vector representation, which is not effective for dense datasets, CVS
efficiently handles sparse datasets and dense datasets in a unified manner. Our
experimental results demonstrate that CVS can process both dense datasets and
sparse datasets faster than conventional sparse vector representation with
smaller memory usage.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data Stream Processing with Concurrency Control</title>
      <link>https://mooz.github.io/ja/publication/acr2013-transactional-stream/</link>
      <pubDate>Sat, 01 Jun 2013 00:00:00 +0000</pubDate>
      <guid>https://mooz.github.io/ja/publication/acr2013-transactional-stream/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
